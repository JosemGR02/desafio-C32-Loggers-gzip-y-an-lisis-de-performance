
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~| COMANDOS DESAFIO.TXT |~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/



+++++++++++++++( UTILIZANDO FORK Y CLUSTER )++++++++++++++++++


¬¬¬¬¬¬¬¬¬¬¬| Ejecucion del Servidor con Nodemon:


ls

nodemon src/app.js 8080

-----------------------

++++++| lo que deberia:

ls

nodemon src/app.js -m FORK -p 8081   (creo que quedo bien)

nodemon src/app.js -m CLUSTER -p 8082

ps


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


¬¬¬¬¬¬¬¬¬¬¬| Ejecucion del Servidor con PM2:


ls

cd src/

pm2 start app.js --name="Server1"

-----------------------

++++++| lo que deberia:

ls

cd src/

pm2 start app.js --name="Server1" --wacht -- 8081     (FORK)

pm2 start app.js --name="Server2" --wacht -i max -- 8082  (CLUSTER)

pm2 list

ps

pm2 monit

pm2 logs

pm2 stop 0

pm2 delete 0



-----------------------

<><><><><| prueba:

pm2 start app.js --name="Server2" -- -- port=8081 --modo=cluster



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


¬¬¬¬¬¬¬¬¬¬¬| Ejecucion del Servidor con NGINX:

carpeta Nginx

pwd

./nginx.exe -s reload  (para reiniciar el servidor al cambiar la config)

./nginx.exe -s stop (pausar)

./nginx.exe -s quit (cerrar)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



//<><><><><><><><><><>| CAMBIOS CONFIG NGINX :


    upstream fork {
        server 127.0.0.1:8080;

    }

    upstream cluster {
        server 127.0.0.1.8081;
    }

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


    listen       8080;


    upstream fork {
        server 127.0.0.1:8081;

    }

    upstream cluster {
        server 127.0.0.1.8082;
        server 127.0.0.1.8083;
        server 127.0.0.1.8084;
        server 127.0.0.1.8085;
    }

    location / {
        root   html;
        index  index.html index.htm;
    }

    location /api/info/ {
        proxy_pass http://fork;        
    }

    location /api/autenticacion/ {
        proxy_pass http://fork;        
    }

    location /api/randoms/ {
        proxy_pass http://cluster;
    }

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

¬¬¬¬¬¬¬¬¬¬( punto extra opcional )

    upstream cluster {
        server 127.0.0.1.8082 weight=1;
        server 127.0.0.1.8083 weight=3;
        server 127.0.0.1.8084 weight=2;
        server 127.0.0.1.8085 weight=1;
    }


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

nginx 

lo asocia con el proyecto con un 

node app.js 8082

(consola aparte)



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


// pruebas fork y cluster:

// node app.js 8080
// nodemon app.js 8080



// comandos ejecucion server modos y puertos:

// nodemon app.js -m cluster -p 8080
// nodemon app.js -m fork -p 8080



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


// con pm2
// pm2 start app.js -name="Server2" --wacht -- 8081 
// pm2 start app.js --name="Server2" --wacht -i max -- 8082 



// pm2 start app.js --modo=FORK --port=8080


--CLUSTER / -- CLUSTER (paramentro verificar)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
